/* eslint-disable @next/next/no-img-element */
import Head from "next/head";
import styles from "../styles/Home.module.css";
import { useEffect, useState } from "react";
import PersonalDetails from "./components/PersonalDetails";
import Show from "./components/Show";
import Motivation from "./components/Motivation";
import Stepper from "./components/Stepper";
import { code, CodecellLogo, fire, user } from "../assets";
import Modal from "./components/Modal";
import { doc, setDoc } from "firebase/firestore";
import { db } from "../config/firebase";
import { spreadsheetAPI } from "../config/next.config";
import LegalDocuments from "./components/LegalDocuments";
import SubmitModal from "./components/SubmitModal";

const registerStudent = async (formData: object) => {
	try {
		// console.log(formData);
		let email = localStorage.getItem("email") || "no-email";
		const regRef = doc(db, "FY_2022-23", email);
		const registrationID = Date.now() + Math.round(Math.random() * 10e4);
		const timestamp = new Date(Date.now()).toString();
		const finalData = { registrationID, ...formData, timestamp };

		// console.log(finalData);

		// Storing finalData in Firestore
		const docRef = await setDoc(regRef, finalData, { merge: true });

		// Passing data to spreadsheet
		const url = spreadsheetAPI;

		fetch(url, {
			method: "POST",
			headers: {
				"Content-Type": "application/json",
			},
			body: JSON.stringify(finalData),
		})
			.then((response) => response.json())
			.then((data) => {
				console.log("Registration ID: " + registrationID);
			})
			.catch((error) => {
				console.error("Registration Failed: Error - ", error);
			});
	} catch (e) {
		console.error("Registration Failed: Error adding document - ", e);
	}
};

export default function Home() {
	const [currentSlide, setCurrentSlide] = useState<number>(0);
	let defaultSlide = 0;
	useEffect(() => {
		setTimeout(() => {
			localStorage.setItem("slide", JSON.stringify(currentSlide));
		}, 800);
	}, [currentSlide]);
	useEffect(() => {
		defaultSlide = parseInt(localStorage.getItem("slide") || "0");
		setCurrentSlide(defaultSlide || 0);
	}, []);
	const [submitModalVisible, setSubmitModalVisible] = useState<boolean>(true);
	useEffect(() => {
		setSubmitModalVisible(localStorage.getItem("submitted") === "true");
	}, []);

	// Main Data
	const [formData, setFormData] = useState<object>({});

	// 3 Sections Data
	const [personalDetailsData, setPersonalDetailsData] = useState<
		object | undefined
	>({});
	const [showUsData, setShowUsData] = useState<object | undefined>({});
	const [motivationData, setMotivationData] = useState<object | undefined>({});
	const [legalDocumentsData, setLegalDocumentsData] = useState<
		object | undefined
	>({});

	const [personalDetailsDataFilled, setPersonalDetailsDataFilled] =
		useState<boolean>(false);
	const [showUsDataFilled, setShowUsDataFilled] = useState<boolean>(false);
	const [legalDocumentsDataFilled, setLegalDocumentsDataFilled] =
		useState<boolean>(false);
	const [motivationDataFilled, setmotivationDataFilled] =
		useState<boolean>(false);

	const updatePersonalDetailsData = (newData: any) => {
		setPersonalDetailsData(newData);
	};

	const updateShowUsData = (newData: any) => {
		setShowUsData(newData);
	};

	const updateMotivationData = (newData: any) => {
		setMotivationData(newData);
	};

	const updateLegalDocumentsData = (newData: any) => {
		setLegalDocumentsData(newData);
	};

	useEffect(() => {
		setFormData({
			...personalDetailsData,
			...showUsData,
			...legalDocumentsData,
			...motivationData,
		});
	}, [personalDetailsData, showUsData, legalDocumentsData, motivationData]);

	const finalSubmit = () => {
		if (!personalDetailsDataFilled) {
			setCurrentSlide(0);
		} else if (!showUsDataFilled) {
			setCurrentSlide(1);
		} else if (!legalDocumentsDataFilled) {
			setCurrentSlide(2);
		} else {
			// registerStudent(formData).then(() => console.log("Applied successfully"));
			// console.log(formData);
			localStorage.setItem("submitted", "true");
			setSubmitModalVisible(true);
		}
	};

	return (
		<>
			<Head>
				<title>FY Representatives Forms</title>
				<meta name="description" content="Generated by create next app" />
				<meta name="viewport" content="width=device-width, initial-scale=1" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<main className={styles.main}>
				<Modal />
				{submitModalVisible && <SubmitModal />}
				<div className={styles.mainContainer}>
					<div className={styles.heading}>
						{/* <h1>KJSCE CodeCell</h1> */}
						<a href="https://www.kjscecodecell.com/">
							<img src={CodecellLogo.src} alt="Codecell Logo" />
						</a>
					</div>
					<div className={styles.container}>
						<div className={styles.leftcontainer}>
							<Stepper
								current={currentSlide}
								Change={(n: number) => setCurrentSlide(n)}
								items={[
									{
										title: "Personal Details",
										description: "",
										icon: user,
									},
									{
										title: "Show us what you got",
										description: "",
										icon: code,
									},
									{
										title: "Legal Documents",
										description: "",
										icon: code,
									},
									{
										title: "Motivation",
										description: "",
										icon: fire,
									},
								]}
							/>
						</div>

						<div className={styles.rightcontainer}>
							{currentSlide === 0 && (
								<PersonalDetails
									currentSlide={currentSlide}
									setCurrentSlide={setCurrentSlide}
									updateForm={updatePersonalDetailsData}
									formState={setPersonalDetailsDataFilled}
								/>
							)}

							{currentSlide === 1 && (
								<Show
									currentSlide={currentSlide}
									setCurrentSlide={setCurrentSlide}
									updateForm={updateShowUsData}
									formState={setShowUsDataFilled}
								/>
							)}

							{currentSlide === 2 && (
								<LegalDocuments
									currentSlide={currentSlide}
									setCurrentSlide={setCurrentSlide}
									updateForm={updateLegalDocumentsData}
									formState={setLegalDocumentsDataFilled}
								/>
							)}

							{currentSlide === 3 && (
								<Motivation
									currentSlide={currentSlide}
									setCurrentSlide={setCurrentSlide}
									updateForm={updateMotivationData}
									formState={setmotivationDataFilled}
									finalSubmit={finalSubmit}
								/>
							)}
						</div>
					</div>
				</div>
			</main>
		</>
	);
}
